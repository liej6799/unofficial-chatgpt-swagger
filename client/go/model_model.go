/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Model type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Model{}

// Model struct for Model
type Model struct {
	Slug string `json:"slug"`
	MaxTokens int32 `json:"max_tokens"`
	Title string `json:"title"`
	Description string `json:"description"`
	Tags []interface{} `json:"tags"`
}

// NewModel instantiates a new Model object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModel(slug string, maxTokens int32, title string, description string, tags []interface{}) *Model {
	this := Model{}
	this.Slug = slug
	this.MaxTokens = maxTokens
	this.Title = title
	this.Description = description
	this.Tags = tags
	return &this
}

// NewModelWithDefaults instantiates a new Model object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelWithDefaults() *Model {
	this := Model{}
	return &this
}

// GetSlug returns the Slug field value
func (o *Model) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *Model) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *Model) SetSlug(v string) {
	o.Slug = v
}

// GetMaxTokens returns the MaxTokens field value
func (o *Model) GetMaxTokens() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxTokens
}

// GetMaxTokensOk returns a tuple with the MaxTokens field value
// and a boolean to check if the value has been set.
func (o *Model) GetMaxTokensOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxTokens, true
}

// SetMaxTokens sets field value
func (o *Model) SetMaxTokens(v int32) {
	o.MaxTokens = v
}

// GetTitle returns the Title field value
func (o *Model) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *Model) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *Model) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value
func (o *Model) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Model) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Model) SetDescription(v string) {
	o.Description = v
}

// GetTags returns the Tags field value
func (o *Model) GetTags() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *Model) GetTagsOk() ([]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *Model) SetTags(v []interface{}) {
	o.Tags = v
}

func (o Model) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Model) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["slug"] = o.Slug
	toSerialize["max_tokens"] = o.MaxTokens
	toSerialize["title"] = o.Title
	toSerialize["description"] = o.Description
	toSerialize["tags"] = o.Tags
	return toSerialize, nil
}

type NullableModel struct {
	value *Model
	isSet bool
}

func (v NullableModel) Get() *Model {
	return v.value
}

func (v *NullableModel) Set(val *Model) {
	v.value = val
	v.isSet = true
}

func (v NullableModel) IsSet() bool {
	return v.isSet
}

func (v *NullableModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModel(val *Model) *NullableModel {
	return &NullableModel{value: val, isSet: true}
}

func (v NullableModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


