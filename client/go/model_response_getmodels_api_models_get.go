/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ResponseGetmodelsApiModelsGet struct for ResponseGetmodelsApiModelsGet
type ResponseGetmodelsApiModelsGet struct {
	ErrorResponse *ErrorResponse
	ModelResponse *ModelResponse
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ResponseGetmodelsApiModelsGet) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ErrorResponse
	err = json.Unmarshal(data, &dst.ErrorResponse);
	if err == nil {
		jsonErrorResponse, _ := json.Marshal(dst.ErrorResponse)
		if string(jsonErrorResponse) == "{}" { // empty struct
			dst.ErrorResponse = nil
		} else {
			return nil // data stored in dst.ErrorResponse, return on the first match
		}
	} else {
		dst.ErrorResponse = nil
	}

	// try to unmarshal JSON data into ModelResponse
	err = json.Unmarshal(data, &dst.ModelResponse);
	if err == nil {
		jsonModelResponse, _ := json.Marshal(dst.ModelResponse)
		if string(jsonModelResponse) == "{}" { // empty struct
			dst.ModelResponse = nil
		} else {
			return nil // data stored in dst.ModelResponse, return on the first match
		}
	} else {
		dst.ModelResponse = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ResponseGetmodelsApiModelsGet)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ResponseGetmodelsApiModelsGet) MarshalJSON() ([]byte, error) {
	if src.ErrorResponse != nil {
		return json.Marshal(&src.ErrorResponse)
	}

	if src.ModelResponse != nil {
		return json.Marshal(&src.ModelResponse)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableResponseGetmodelsApiModelsGet struct {
	value *ResponseGetmodelsApiModelsGet
	isSet bool
}

func (v NullableResponseGetmodelsApiModelsGet) Get() *ResponseGetmodelsApiModelsGet {
	return v.value
}

func (v *NullableResponseGetmodelsApiModelsGet) Set(val *ResponseGetmodelsApiModelsGet) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseGetmodelsApiModelsGet) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseGetmodelsApiModelsGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseGetmodelsApiModelsGet(val *ResponseGetmodelsApiModelsGet) *NullableResponseGetmodelsApiModelsGet {
	return &NullableResponseGetmodelsApiModelsGet{value: val, isSet: true}
}

func (v NullableResponseGetmodelsApiModelsGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseGetmodelsApiModelsGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


